@model OrderItem
@inject Database.SolforbDbContext DbContext
@{
    ViewData["Title"] = "Обновить элемент заказа";
    ViewBag.Order = await DbContext.GetOrderByIdAsync(Model.OrderId);
    ViewBag.Provider = await DbContext.GetProviderByIdAsync((int)ViewBag.Order.ProviderId);
}
<style>
    .form-text {
        color: red;
    }
</style>
<div class="row">
    <div class="row">
        <h4>Заказ:</h4>
        <div class="col-3">
            Id: @ViewBag.Order.Id
        </div>
        <div class="col-3">
            Prodiver: @ViewBag.Provider.Name
        </div>
        <div class="col-3">
            Number: @ViewBag.Order.Number
        </div>
        <div class="col-3">
            Date: @ViewBag.Order.Date
        </div>
    </div>
    <div class="row">
        <h4>Элементы заказа</h4>
        <form id="ItemsForm" asp-route="createitem" asp-route-orderId="@ViewBag.OrderId" method="post">
            

            <div class="elementOrder ms-5 row">
                <div class="col-3 mb-3">
                    <label class="form-label">Name</label>
                    <input type="text" class="form-control" asp-for=@Model.Name>
                    <div class="form-text">@ViewData[$"NameError"]</div>
                </div>
                <div class="col-3 mb-3">
                    <label class="form-label">Quantity</label>
                    <input type="number" step="any" class="form-control" asp-for="@Model.Quantity">
                    <div class="form-text">@ViewData[$"QuantityError"]</div>
                </div>
                <div class="col-3 mb-3">
                    <label class="form-label">Unit</label>
                    <input type="text" class="form-control" asp-for="@Model.Unit">
                    <div class="form-text">@ViewData[$"UnitError"]</div>
                </div>


            </div>
            
            <button id="AddItem" class="btn btn-success" type="submit">
                Сохранить
            </button>
        </form>
    </div>
</div>

