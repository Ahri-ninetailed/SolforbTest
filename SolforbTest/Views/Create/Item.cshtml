@model OrderItem
@inject Database.SolforbDbContext DbContext
@{
    ViewData["Title"] = "Создать элемент заказа";
}
<style>
    .form-text {
        color: red;
    }
</style>
<div class="row">
    <div class="row">
        <h4>Элементы заказа</h4>
        <form id="ItemsForm" asp-action="Item" asp-route-orderId="@ViewBag.OrderId" asp-controller="Create" method="post">
            

            <div class="elementOrder ms-5 row">
                <div class="col-3 mb-3">
                    <label class="form-label">Name</label>
                    <input type="text" class="form-control" value="@Guid.NewGuid()" asp-for=@Model.Name>
                    <div class="form-text">@ViewData[$"NameError"]</div>
                </div>
                <div class="col-3 mb-3">
                    <label class="form-label">Quantity</label>
                    <input type="number" step="any" value="1" class="form-control" asp-for="@Model.Quantity">
                    <div class="form-text">@ViewData[$"QuantityError"]</div>
                </div>
                <div class="col-3 mb-3">
                    <label class="form-label">Unit</label>
                    <input type="text" class="form-control" asp-for="@Model.Unit">
                    <div class="form-text">@ViewData[$"UnitError"]</div>
                </div>


            </div>
            
            <button id="AddItem" class="btn btn-success" type="submit">
                Создать элемент
            </button>
        </form>
    </div>
</div>
<script src="~/lib/jquery/jquery.min.js"></script>
<script>
    /*function submitStudent() {
        var data = $("#ItemsForm").serialize();

        
        
        let url = "/Create/Order" + id
        alert(url)
        let resp = $.ajax({
            type: 'POST',
            url: url,
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
            data: data,
            success: function (result) {
                alert('Successfully received Data ');
                console.log(result);
            },
            error: function () {
                alert('Failed to receive the Data');
                console.log('Failed ');
            }
        })*/


    }
    $("#AddItem").click(function (event) {
        event.preventDefault();
        submitStudent();
    });
</script>
